/* 
 * ClickSend v3 API
 *
 *  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
 *
 * OpenAPI spec version: 3.1
 * Contact: support@clicksend.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.ClickSend.Client;
using IO.ClickSend.ClickSend.Api;
using IO.ClickSend.ClickSend.Model;

namespace IO.ClickSend.Test
{
    /// <summary>
    ///  Class for testing ContactListApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by ClickSend Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ContactListApiTests
    {
        private ContactListApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ContactListApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContactListApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ContactListApi
            //Assert.IsInstanceOfType(typeof(ContactListApi), instance, "instance is a ContactListApi");
        }

        /// <summary>
        /// Test ListsByListIdDelete
        /// </summary>
        [Test]
        public void ListsByListIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? listId = null;
            //var response = instance.ListsByListIdDelete(listId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ListsByListIdGet
        /// </summary>
        [Test]
        public void ListsByListIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? listId = null;
            //var response = instance.ListsByListIdGet(listId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ListsByListIdPut
        /// </summary>
        [Test]
        public void ListsByListIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContactList body = null;
            //int? listId = null;
            //var response = instance.ListsByListIdPut(body, listId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ListsGet
        /// </summary>
        [Test]
        public void ListsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? limit = null;
            //var response = instance.ListsGet(page, limit);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ListsImportByListIdPost
        /// </summary>
        [Test]
        public void ListsImportByListIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContactListImport body = null;
            //int? listId = null;
            //var response = instance.ListsImportByListIdPost(body, listId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ListsPost
        /// </summary>
        [Test]
        public void ListsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContactList body = null;
            //var response = instance.ListsPost(body);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ListsRemoveDuplicatesByListIdPut
        /// </summary>
        [Test]
        public void ListsRemoveDuplicatesByListIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Fields body = null;
            //int? listId = null;
            //var response = instance.ListsRemoveDuplicatesByListIdPut(body, listId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
    }

}
