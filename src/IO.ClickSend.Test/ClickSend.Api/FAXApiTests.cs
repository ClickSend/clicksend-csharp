/* 
 * ClickSend v3 API
 *
 *  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
 *
 * OpenAPI spec version: 3.1
 * Contact: support@clicksend.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using IO.ClickSend.Client;
using IO.ClickSend.ClickSend.Api;
using IO.ClickSend.ClickSend.Model;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace IO.ClickSend.Test
{
    /// <summary>
    ///  Class for testing FAXApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by ClickSend Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class FAXApiTests
    {
        private FAXApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new FAXApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FAXApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FAXApi
            //Assert.IsInstanceOfType(typeof(FAXApi), instance, "instance is a FAXApi");
        }

        /// <summary>
        /// Test FaxHistoryGet
        /// </summary>
        [TestMethod]
        public void FaxHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? dateFrom = null;
            //int? dateTo = null;
            //string q = null;
            //string order = null;
            //int? page = null;
            //int? limit = null;
            //var response = instance.FaxHistoryGet(dateFrom, dateTo, q, order, page, limit);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test FaxPricePost
        /// </summary>
        [TestMethod]
        public void FaxPricePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FaxMessageCollection body = null;
            //var response = instance.FaxPricePost(body);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test FaxReceiptsByMessageIdGet
        /// </summary>
        [TestMethod]
        public void FaxReceiptsByMessageIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //var response = instance.FaxReceiptsByMessageIdGet(messageId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test FaxReceiptsGet
        /// </summary>
        [TestMethod]
        public void FaxReceiptsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? limit = null;
            //var response = instance.FaxReceiptsGet(page, limit);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test FaxReceiptsPost
        /// </summary>
        [TestMethod]
        public void FaxReceiptsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Url body = null;
            //var response = instance.FaxReceiptsPost(body);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test FaxReceiptsReadPut
        /// </summary>
        [TestMethod]
        public void FaxReceiptsReadPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateBefore body = null;
            //var response = instance.FaxReceiptsReadPut(body);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test FaxSendPost
        /// </summary>
        [TestMethod]
        public void FaxSendPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FaxMessageCollection body = null;
            //var response = instance.FaxSendPost(body);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
    }

}
